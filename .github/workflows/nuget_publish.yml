# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
        
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      
      - name: Install dependencies
        run: dotnet restore
      
      - name: Build
        run: dotnet build --configuration Release --no-restore
      
      - name: Test Library
        run: dotnet test --no-restore --verbosity normal
  
  publish:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Publish Recognizers.Text.Wrapper to NuGet
        uses: brandedoutcast/publish-nuget@v2.5.5
        with:
          PROJECT_FILE_PATH: Recognizers.Text.Wrapper/Recognizers.Text.Wrapper.csproj
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}
      - name: Publish Recognizers.Text.DateTime.Wrapper to NuGet
        uses: brandedoutcast/publish-nuget@v2.5.5
        with:
          PROJECT_FILE_PATH: Recognizers.Text.DateTime.Wrapper/Recognizers.Text.DateTime.Wrapper.csproj
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}
      - name: Publish Recognizers.Text.DateTime.Wrapper.NodaTime to NuGet
        uses: brandedoutcast/publish-nuget@v2.5.5
        with:
          PROJECT_FILE_PATH: Recognizers.Text.DateTime.Wrapper.NodaTime/Recognizers.Text.DateTime.Wrapper.NodaTime.csproj
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}
